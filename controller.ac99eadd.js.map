{"version":3,"sources":["src/types.ts","src/image-loader.ts","src/objects/conveyors.ts","src/levels.ts","src/state.ts","src/utils/stringTo.ts","src/view.ts","src/controller.ts","../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"controller.ac99eadd.js","sourceRoot":"..","sourcesContent":["import { Board } from \"./objects/board\";\n\nexport interface Box {\n\tx: number,\n\ty: number,\n\tvalue: number,\n\treturned: boolean\n}\n\nexport enum Direction {\n\tUp,\n\tDown,\n\tLeft,\n\tRight\n}\n\nexport enum Conveyors {\n\tBase,\n\tMover,\n\tAdder,\n\tSubtractor,\n\tMemoryAssigner,\n\tMemoryAdder,\n\tMemorySubtractor,\n\tMemorySplitter,\n\tReturner\n}\n\nexport interface Memory {\n\tA: number;\n\tB: number;\n\tC: number;\n}\n\nexport enum MemoryType {\n\tA,\n\tB,\n\tC\n}\n\nexport interface State {\n\tselectedConveyor: Conveyors;\n\tselectedMemory: MemoryType;\n\tselectedDirection: Direction;\n\tboardState: Board;\n\tlevel: Level;\n\tisRunning: boolean;\n\tupdate: () => void;\n\tstart: () => void;\n\treset: (won?:boolean) => void;\n\tnextLevel: () => void;\n\tprevLevel: () => void;\n}\n\nexport interface Level {\n\tsize: number;\n\tinitialInput: Array<number>;\n\tinput: Array<number>;\n\texpectedOutput: Array<number>;\n\tactualOutput: Array<number>;\n\tdescription: string;\n\tcompleted: boolean;\n}","import borders from './images/*_border.png';\nimport numbers from './images/numbers/*.png';\nimport minus from './images/numbers/minus.png';\nimport box from './images/box.png';\nimport base from './images/base.png';\nimport returner from './images/returner.png';\nimport mover from './images/*_mover.png';\nimport adder from './images/*_adder.png';\nimport subtractor from './images/*_subtractor.png';\nimport memory from './images/*_memory.png';\nimport memory_adder from './images/*_memory_plus.png';\nimport memory_subtractor from './images/*_memory_minus.png';\nimport memory_splitter from './images/*_memory_splitter.png';\nimport { Direction, Conveyors, MemoryType } from './types';\n\nconst loadImage = (src: string) => {\n\tconst img = new Image();\n\timg.src = src;\n\treturn img;\n}\n\nexport const getImage = (direction: Direction, type: Conveyors) => {\n\tlet imageType;\n\n\tswitch(type){\n\t\tcase Conveyors.Base:\n\t\t\treturn images.base;\n\t\tcase Conveyors.Returner:\n\t\t\treturn images.returner;\n\t\tcase Conveyors.Mover:\n\t\t\timageType = images.mover;\n\t\t\tbreak;\n\t\tcase Conveyors.Adder:\n\t\t\timageType = images.adder;\n\t\t\tbreak;\n\t\tcase Conveyors.Subtractor:\n\t\t\timageType = images.subtractor;\n\t\t\tbreak;\n\t\tcase Conveyors.MemoryAssigner:\n\t\t\timageType = images.memory;\n\t\t\tbreak;\n\t\tcase Conveyors.MemoryAdder:\n\t\t\timageType = images.adder;\n\t\t\tbreak;\n\t\tcase Conveyors.MemorySubtractor:\n\t\t\timageType = images.subtractor;\n\t\t\tbreak;\n\t\tcase Conveyors.MemorySplitter:\n\t\t\timageType = images.memory_splitter;\n\t\t\tbreak;\n\t}\n\n\tswitch(direction){\n\t\tcase Direction.Up:\n\t\t\treturn imageType.up;\n\t\tcase Direction.Down:\n\t\t\treturn imageType.down;\n\t\tcase Direction.Left:\n\t\t\treturn imageType.left;\n\t\tcase Direction.Right:\n\t\t\treturn imageType.right;\n\t}\n}\n\nexport const getBoxImage = () => {\n\treturn images.box;\n}\n\nexport const getNumberImage = (num: number) => {\n\tvar isNegative = false;\n\tvar abs = Math.abs(num);\n\n\tif(num < 0) {\n\t\tisNegative = true;\n\t}\n\n\t// Numbers must be from 0-99\n\tconst truncated = abs % 100;\n\tconst ones = truncated % 10;\n\tconst tens = Math.floor(truncated/10);\n\t\n\t// Magic, fix pls\n\tconst realTens = tens == 0 ? 19:tens + 10 - 1;\n\n\treturn {\n\t\tones: images.numbers[ones],\n\t\ttens: images.numbers[realTens],\n\t\tisNegative: isNegative\n\t};\n}\n\nexport const getMinusImage = () => (images.minus);\n\nexport const getBorderImage = (mem: MemoryType) => {\n\tswitch(mem){\n\t\tcase MemoryType.A:\n\t\t\treturn images.borders.A;\n\t\tcase MemoryType.B:\n\t\t\treturn images.borders.B;\n\t\tcase MemoryType.C:\n\t\t\treturn images.borders.C;\n\t}\n\n\treturn undefined;\n}\n\n\nconst images = {\n\tnumbers: Object.keys(numbers).map((key) => (loadImage(numbers[key]))),\n\tminus: loadImage(minus),\n\tbox: loadImage(box),\n\tbase: loadImage(base),\n\treturner: loadImage(returner),\n\tmover: {\n\t\tup: loadImage(mover.up),\n\t\tdown: loadImage(mover.down),\n\t\tleft: loadImage(mover.left),\n\t\tright: loadImage(mover.right),\n\t},\n\tadder: {\n\t\tup: loadImage(adder.up),\n\t\tdown: loadImage(adder.down),\n\t\tleft: loadImage(adder.left),\n\t\tright: loadImage(adder.right),\n\t},\n\tsubtractor: {\n\t\tup: loadImage(subtractor.up),\n\t\tdown: loadImage(subtractor.down),\n\t\tleft: loadImage(subtractor.left),\n\t\tright: loadImage(subtractor.right),\n\t},\n\tmemory: {\n\t\tup: loadImage(memory.up),\n\t\tdown: loadImage(memory.down),\n\t\tleft: loadImage(memory.left),\n\t\tright: loadImage(memory.right),\n\t},\n\tmemory_adder: {\n\t\tup: loadImage(memory_adder.up),\n\t\tdown: loadImage(memory_adder.down),\n\t\tleft: loadImage(memory_adder.left),\n\t\tright: loadImage(memory_adder.right),\n\t},\n\tmemory_subtractor: {\n\t\tup: loadImage(memory_subtractor.up),\n\t\tdown: loadImage(memory_subtractor.down),\n\t\tleft: loadImage(memory_subtractor.left),\n\t\tright: loadImage(memory_subtractor.right),\n\t},\n\tmemory_splitter: {\n\t\tup: loadImage(memory_splitter.up),\n\t\tdown: loadImage(memory_splitter.down),\n\t\tleft: loadImage(memory_splitter.left),\n\t\tright: loadImage(memory_splitter.right),\n\t},\n\tborders: {\n\t\tA: loadImage(borders.green),\n\t\tB: loadImage(borders.red),\n\t\tC: loadImage(borders.blue),\n\t},\n}","import {Direction, Conveyors, MemoryType, Memory, Box} from '../types';\nimport { getImage } from '../image-loader';\n\nexport function ConveyorFactory(type: Conveyors, direction: Direction, memory_type: MemoryType, memory) {\n\tswitch(type){\n\t\tcase Conveyors.Base:\n\t\t\treturn new Base(direction);\n\t\tcase Conveyors.Mover:\n\t\t\treturn new Mover(direction);\n\t\tcase Conveyors.Adder:\n\t\t\treturn new Adder(direction);\n\t\tcase Conveyors.Subtractor:\n\t\t\treturn new Subtractor(direction);\n\t\tcase Conveyors.MemoryAssigner:\n\t\t\treturn new MemoryAssigner(direction, memory_type, memory)\n\t\tcase Conveyors.MemoryAdder:\n\t\t\treturn new MemoryAdder(direction, memory_type, memory)\n\t\tcase Conveyors.MemorySubtractor:\n\t\t\treturn new MemorySubtractor(direction, memory_type, memory)\n\t\tcase Conveyors.MemorySplitter:\n\t\t\treturn new MemorySplitter(direction, memory_type, memory)\n\t\tcase Conveyors.Returner:\n\t\t\treturn new Returner(direction)\n\t\tdefault:\n\t\t\treturn new Base(direction);\n\t}\n}\n\nexport class Base {\n\tdirection: Direction;\n\tmemory_type: MemoryType;\n\tconstructor(direction: Direction){\n\t\tthis.direction = direction;\n\t}\n\tupdate(box: Box) {};\n\tdraw(ctx: CanvasRenderingContext2D, \n\t\t\twidth: number, height: number, size: number,\n\t\t\tx: number, y: number) {\n\n\t\tlet img = getImage(this.direction, this.type);\n\n\t\tctx.drawImage(\n\t\t\timg,\n\t\t\twidth/size*x, height/size*y,\n\t\t\twidth/size, height/size);\n\t}\n\ttype = Conveyors.Base;\n}\n\nexport class Returner extends Base {\n\ttype = Conveyors.Returner;\n\tupdate(box: Box) {\n\t\tbox.returned = true;\n\t}\n}\n\nexport class Mover extends Base {\n\ttype = Conveyors.Mover;\n\tconstructor(direction: Direction){\n\t\tsuper(direction);\n\t}\n\n\tupdate(box: Box) {\n\t\tswitch(this.direction){\n\t\t\tcase Direction.Right:\n\t\t\t\tbox.x++;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Down:\n\t\t\t\tbox.y++;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Left:\n\t\t\t\tbox.x--;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Up:\n\t\t\t\tbox.y--;\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport class Adder extends Mover {\n\ttype = Conveyors.Adder;\n\tconstructor(direction: Direction) {\n\t\tsuper(direction);\n\t}\n\n\tupdate(box: Box) {\n\t\tsuper.update(box);\n\t\tbox.value++;\n\t}\n}\n\nexport class Subtractor extends Mover {\n\ttype = Conveyors.Subtractor;\n\n\tupdate = (box: Box) => {\n\t\tsuper.update(box);\n\t\tbox.value--;\n\t}\n}\n\nexport class MemoryAssigner extends Mover {\n\ttype = Conveyors.MemoryAssigner;\n\tmemory_type: MemoryType;\n\tmemory: Memory;\n\n\tconstructor(direction: Direction, memory_type: MemoryType, memory: Memory){\n\t\tsuper(direction);\n\t\tthis.memory_type = memory_type;\n\t\tthis.memory = memory;\n\t}\n\n\tupdate = (box: Box) => {\n\t\tsuper.update(box);\n\t\tswitch(this.memory_type){\n\t\t\tcase MemoryType.A:\n\t\t\t\tthis.memory.A = box.value;\n\t\t\t\tbreak;\n\t\t\tcase MemoryType.B:\n\t\t\t\tthis.memory.B = box.value;\n\t\t\t\tbreak;\n\t\t\tcase MemoryType.C:\n\t\t\t\tthis.memory.C = box.value;\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport class MemoryAdder extends Mover {\n\ttype = Conveyors.MemoryAdder;\n\tmemory_type: MemoryType;\n\tmemory: Memory;\n\tconstructor(direction: Direction, memory_type: MemoryType, memory: Memory){\n\t\tsuper(direction);\n\t\tthis.memory_type = memory_type;\n\t\tthis.memory = memory;\n\t}\n\n\tupdate = (box: Box) => {\n\t\tsuper.update(box);\n\t\tswitch(this.memory_type){\n\t\t\tcase MemoryType.A:\n\t\t\t\tthis.memory.A++;\n\t\t\t\tbreak;\n\t\t\tcase MemoryType.B:\n\t\t\t\tthis.memory.B++;\n\t\t\t\tbreak;\n\t\t\tcase MemoryType.C:\n\t\t\t\tthis.memory.C++;\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n}\n\nexport class MemorySubtractor extends Mover {\n\ttype = Conveyors.MemorySubtractor;\n\tmemory_type: MemoryType;\n\tmemory: Memory;\n\tconstructor(direction: Direction, memory_type: MemoryType, memory: Memory){\n\t\tsuper(direction);\n\t\tthis.memory_type = memory_type;\n\t\tthis.memory = memory;\n\t}\n\n\tupdate = (box: Box) => {\n\t\tconsole.log(this.memory)\n\t\tsuper.update(box);\n\t\tswitch(this.memory_type){\n\t\t\tcase MemoryType.A:\n\t\t\t\tthis.memory.A--;\n\t\t\t\tbreak;\n\t\t\tcase MemoryType.B:\n\t\t\t\tthis.memory.B--;\n\t\t\t\tbreak;\n\t\t\tcase MemoryType.C:\n\t\t\t\tthis.memory.C--;\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport class MemorySplitter extends Mover {\n\ttype = Conveyors.MemorySplitter;\n\tmemory_type: MemoryType;\n\tmemory: Memory;\n\n\tconstructor(direction: Direction, memory_type: MemoryType, memory: Memory){\n\t\tsuper(direction);\n\t\tthis.memory_type = memory_type;\n\t\tthis.memory = memory;\n\t}\n\n\tupdate = (box: Box) => {\n\t\tswitch(this.memory_type){\n\t\t\tcase MemoryType.A:\n\t\t\t\tSplitter(box, this.direction, this.memory.A);\n\t\t\t\tbreak;\n\t\t\tcase MemoryType.B:\n\t\t\t\tSplitter(box, this.direction, this.memory.B);\n\t\t\t\tbreak;\n\t\t\tcase MemoryType.C:\n\t\t\t\tSplitter(box, this.direction, this.memory.C);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction Splitter(box: Box, direction: Direction, value: number){\n\tif(value > 0){\n\t\tswitch(direction){\n\t\t\tcase Direction.Right:\n\t\t\t\tbox.y--;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Down:\n\t\t\t\tbox.x++;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Left:\n\t\t\t\tbox.y++;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Up:\n\t\t\t\tbox.x--;\n\t\t\t\tbreak;\n\t\t}\n\t// If value < 0, go to the left\n\t} else if (value < 0){\n\t\tswitch(direction){\n\t\t\tcase Direction.Right:\n\t\t\t\tbox.y++;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Down:\n\t\t\t\tbox.x--;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Left:\n\t\t\t\tbox.y--;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Up:\n\t\t\t\tbox.x++;\n\t\t\t\tbreak;\n\t\t}\n\t// If value == 0, follow direction\n\t} else {\n\t\tswitch(direction){\n\t\t\tcase Direction.Right:\n\t\t\t\tbox.x++;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Down:\n\t\t\t\tbox.y++;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Left:\n\t\t\t\tbox.x--;\n\t\t\t\tbreak;\n\t\t\tcase Direction.Up:\n\t\t\t\tbox.y--;\n\t\t\t\tbreak;\n\t\t}\n\t}\n}","//import { Level } from \"./types\";\n\nclass Level {\n\tsize: number;\n\tinitialInput: Array<number>;\n\tinput: Array<number>;\n\texpectedOutput: Array<number>;\n\tactualOutput: Array<number>;\n\tdescription: string;\n\tcompleted: boolean;\n\tconstructor(size: number, input: Array<number>, output: Array<number>, description: string){\n\t\tthis.size = size;\n\t\tthis.initialInput = input;\n\t\tthis.expectedOutput = output;\n\t\tthis.description = description;\n\n\t\tthis.actualOutput = [];\n\t\tthis.input = [];\n\t\tthis.completed = false;\n\t}\n}\n\nconst level1 = new Level(3, [0,0,0], [0,0,0], \"Move the boxes to the return square\");\nconst level2 = new Level(5, [0,0,0], [1,1,1], \"Add one to each box\");\nconst level3 = new Level(5, [1,2,3], [-2,-1,0], \"Subtract three from each box\");\nconst level4 = new Level(5, [4,2,-2], [0,0,0], \"Output zero for all inputs\");\n\nconst level5 = {\n\tname: \"Two and a half boxes\",\n\tdescription: \"Divide the input by two\",\n\tinput: [2, 6, -4],\n\toutput: [1, 3, -2],\n\tsize: 5,\n}\n\nconst level6 = {\n\tname: \"Two and a half boxes 2: Electric boogaloo\",\n\tdescription: \"Divide the input by two, round up for odd numbers\",\n\tinput: [2, 3, 7, -3, -4],\n\toutput: [1, 2, 4, -2, -2],\n\tsize: 7,\n}\n\nconst level7 = {\n\tname: \"Remember the last one\",\n\tdescription: \"Add the previous output to the input\",\n\tinput: [1, 1, 1],\n\toutput: [1, 2, 3],\n\tsize: 5,\n}\n\nconst levels: Level[] = [\n\tlevel1,\n\tlevel2,\n\tlevel3,\n\tlevel4,\n]\n\nexport default levels;","import { Conveyors, Direction, State, Level, MemoryType } from './types';\nimport {Base, ConveyorFactory} from './objects/conveyors'\nimport levels from './levels';\n\nexport class StateClass {\n\tmenu = {\n\t\tselectedConveyor: Conveyors.Base,\n\t\tselectedMemory: MemoryType.A,\n\t\tselectedDirection: Direction.Down,\n\t\tselectedLevel: 0,\n\t}\n\n\tlevel = levels[this.menu.selectedLevel];\n\n\tlevelOperations = {\n\t\tnextLevel: () => {\n\t\t\tif(this.menu.selectedLevel == levels.length - 1){\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.menu.selectedLevel += 1;\n\t\t\tthis.levelOperations.updateLevel();\n\t\t},\n\n\t\tprevLevel: () => {\n\t\t\tif(this.menu.selectedLevel == 0){\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.menu.selectedLevel -= 1;\n\t\t\tthis.levelOperations.updateLevel();\n\t\t},\n\n\t\tupdateLevel: () => {\n\t\t\tthis.level = levels[this.menu.selectedLevel]\n\t\t}\n\t}\n\n\n\n\t/*\n\tlevel = {\n\t\tsize: 3,\n\t\tinitialInput: [0,0,0],\n\t\tinput: [],\n\t\texpectedOutput: [1,1,1],\n\t\tactualOutput: []\n\t}\n\t*/\n\n\tbox = {\n\t\tx: 0,\n\t\ty: 0,\n\t\tvalue: 0,\n\t\treturned: false\n\t}\n\n\tboxOperations = {\n\n\t}\n\n\tboard = {\n\t\tmemory: {\n\t\t\tA: 0,\n\t\t\tB: 0,\n\t\t\tC: 0\n\t\t},\n\n\t\tresetMemory: () => {\n\t\t\tthis.board.memory.A = 0;\n\t\t\tthis.board.memory.B = 0;\n\t\t\tthis.board.memory.C = 0;\n\t\t},\n\n\t\tgrid: [],\n\n\t\tcreateGrid: (size: number) => {\n\t\t\tconst grid = Array(size).fill(undefined)\n\t\t\t.map(()=>Array(size).fill(undefined))\n\n\t\t\tthis.board.grid = grid.map((row) => (row.map(() => (\n\t\t\t\tConveyorFactory(\n\t\t\t\t\tConveyors.Base,\n\t\t\t\t\tDirection.Up,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined\n\t\t\t\t)\n\t\t\t\t))))\n\t\t},\n\n\t\tresetGrid: () => {\n\t\t\tthis.board.createGrid(this.level.size);\n\t\t\tthis.board.grid[0][0] = ConveyorFactory(\n\t\t\t\tConveyors.Mover,\n\t\t\t\tDirection.Down,\n\t\t\t\tundefined,\n\t\t\t\tundefined\n\t\t\t)\n\t\t},\n\n\t\tupdateGrid: (x: number, y: number) => {\n\t\t\tthis.board.grid[x][y] = ConveyorFactory(\n\t\t\t\tthis.menu.selectedConveyor,\n\t\t\t\tthis.menu.selectedDirection,\n\t\t\t\tthis.menu.selectedMemory,\n\t\t\t\tthis.board.memory\n\t\t\t\t);\n\t\t},\n\t}\n\n\tlevelIndex: number = 0;\n\tinterval: number;\n\t\n\tconstructor() {\n\t\tthis.board.resetGrid();\n\t\tthis.box = undefined;\n\t}\n\n\t/*\n\tnextLevel = () => {\n\t\tif(this.isRunning) return;\n\t\tthis.levelIndex = this.levelIndex < levels.length-1? this.levelIndex+1:this.levelIndex;\n\t\tthis.setLevel();\n\t}\n\n\tprevLevel = () => {\n\t\tif(this.isRunning) return;\n\t\tthis.levelIndex = this.levelIndex > 0? this.levelIndex-1:this.levelIndex;\n\t\tthis.setLevel();\n\t}\n\n\tsetLevel = () => {\n\t\tthis.level = levels[this.levelIndex];\n\t\tthis.boardState = new Board(this.level.size);\n\n\t\tconst canvasSize = this.level.size * 128;\n\t\tthis.canvas.height = canvasSize;\n\t\tthis.canvas.width = canvasSize;\n\n\t\tthis.draw();\n\n\t\tdocument.getElementById(\"level_name\").innerHTML = this.level.name;\n\t\tdocument.getElementById(\"level_name\").style.color = \"black\";\n\t\tdocument.getElementById(\"level_description\").innerHTML = this.level.description;\n\t\tdocument.getElementById(\"input\").innerHTML = \"Input: \" + this.level.input.toString();\n\t\tdocument.getElementById(\"output\").innerHTML = \"Output: \" + this.level.output.toString();\n\t}\n\t*/\n\n\t/*\n\tdraw = () => {\n\t\tthis.context.fillStyle = \"#eeeeee\";\n\t\tthis.context.fillRect(0,0,this.canvas.width, this.canvas.height)\n\t\tthis.boardState.draw(this.context, this.canvas.width, this.canvas.height);\n\t\tthis.boxHandler.draw(this.context, this.canvas.width, this.canvas.height, this.boardState.size);\n\t}\n\t*/\n\n\t/*\n\tstart = () =>{\n\t\tdocument.getElementById(\"level_name\").style.color = \"black\";\n\t\tconst button = document.getElementById(\"start\");\n\t\tbutton.innerHTML = \"Stop\";\n\n\t\tthis.isRunning = true;\n\t\tthis.update();\n\t\tthis.draw();\n\n\t\tthis.interval = setInterval(() => {\n\t\t\tthis.update();\n\t\t\tthis.draw();\n\t\t}, 300);\n\t}\n\n\treset = (won: boolean = false) => {\n\t\tconst button = document.getElementById(\"start\");\n\t\tbutton.innerHTML = \"Start\";\n\n\t\tthis.boxHandler.reset(won);\n\n\t\tclearInterval(this.interval);\n\t\tthis.isRunning = false;\n\n\t\tthis.boardState.memory.A = 0;\n\t\tthis.boardState.memory.B = 0;\n\t\tthis.boardState.memory.C = 0;\n\n\t\tthis.draw();\n\t}\n\t*/\n}","import {Conveyors, Direction} from '../types';\n\n\nexport const keyToDirection = (name: String): Direction => {\n\tswitch(name){\n\t\tcase 'ArrowUp':\n\t\t\treturn Direction.Up;\n\t\tcase 'ArrowDown':\n\t\t\treturn Direction.Down;\n\t\tcase 'ArrowLeft':\n\t\t\treturn Direction.Left;\n\t\tcase 'ArrowRight':\n\t\t\treturn Direction.Right;\n\t\tdefault:\n\t\t\treturn undefined\n\t}\n}\n\nexport const stringToDirection = (name: String): Direction => {\n\tswitch(name){\n\t\tcase 'up':\n\t\t\treturn Direction.Up;\n\t\tcase 'down':\n\t\t\treturn Direction.Down;\n\t\tcase 'left':\n\t\t\treturn Direction.Left;\n\t\tcase 'right':\n\t\t\treturn Direction.Right;\n\t}\n}\n\nexport const stringToConveyor = (name: String): Conveyors => {\n\tswitch(name){\n\t\tcase 'base':\n\t\t\treturn Conveyors.Base;\n\t\tcase 'mover':\n\t\t\treturn Conveyors.Mover;\n\t\tcase 'adder':\n\t\t\treturn Conveyors.Adder;\n\t\tcase 'subtractor':\n\t\t\treturn Conveyors.Subtractor;\n\t\tcase 'memory_assigner':\n\t\t\treturn Conveyors.MemoryAssigner;\n\t\tcase 'memory_adder':\n\t\t\treturn Conveyors.MemoryAdder;\n\t\tcase 'memory_subtractor':\n\t\t\treturn Conveyors.MemorySubtractor;\n\t\tcase 'memory_splitter':\n\t\t\treturn Conveyors.MemorySplitter;\n\t\tcase 'returner':\n\t\t\treturn Conveyors.Returner;\n\t}\n}","import { Direction, Conveyors, Level, Memory } from \"./types\";\nimport {getImage, getBoxImage, getNumberImage, getMinusImage, getBorderImage} from \"./image-loader\"\nimport { stringToConveyor } from \"./utils/stringTo\";\nimport { Base } from \"./objects/conveyors\";\n\nexport class ViewClass {\n\tcanvas: HTMLCanvasElement;\n\tctx: CanvasRenderingContext2D;\n\tmenuButtons: NodeListOf<HTMLImageElement>;\n\tconveyorButtons: NodeListOf<HTMLImageElement>;\n\tdirectionButtons: NodeListOf<HTMLImageElement>;\n\n\tconstructor(direction: Direction){\n\t\tthis.canvas = document.querySelector('#canvas');\n\t\tthis.ctx = this.canvas.getContext('2d');\n\t\tthis.initializeCanvas();\n\n\t\tthis.menuButtons = document.querySelectorAll(\".menu_buttons\");\n\t\tthis.conveyorButtons = document.querySelectorAll(\".conveyor_buttons\");\n\t\tthis.directionButtons = document.querySelectorAll(\".direction_buttons\");\n\t\tthis.initializeButtons(direction);\n\t}\n\n\tupdateLevelView = (index: number, level: Level) => {\n\t\tdocument.querySelector(\"#level_name\").innerHTML = \"Level: \" + (index + 1);\n\t\tdocument.querySelector(\"#level_description\").innerHTML = level.description;\n\t\tdocument.querySelector(\"#input\").innerHTML = level.initialInput.toString();\n\t\tdocument.querySelector(\"#output\").innerHTML = level.expectedOutput.toString();\n\t\tdocument.querySelector(\"#level_status\").innerHTML = level.completed?\"done_outline\":\"clear\";\n\t\t(document.querySelector(\"#level_status\") as HTMLElement).style.color = level.completed?\"green\":\"red\";\n\t}\n\n\tupdateMemoryView = (memory: Memory) => {\n\t\tdocument.querySelector(\"#memory_a_display\").innerHTML = memory.A.toString();\n\t\tdocument.querySelector(\"#memory_b_display\").innerHTML = memory.B.toString();\n\t\tdocument.querySelector(\"#memory_c_display\").innerHTML = memory.C.toString();\n\t}\n\n\tdrawBox = (box, size) => {\n\n\t\tif(box == undefined) return;\n\n\t\tconst width = this.canvas.width;\n\t\tconst height = this.canvas.height;\n\t\t\n\t\tthis.ctx.fillStyle = \"#000000\";\n\t\tconst img = getBoxImage();\n\t\tconst number = getNumberImage(box.value);\n\t\tthis.ctx.drawImage(\n\t\t\timg,\n\t\t\twidth/size*box.x, height/size*box.y,\n\t\t\twidth/size, height/size);\n\n\t\tthis.ctx.drawImage(\n\t\t\tnumber.ones,\n\t\t\twidth/size*box.x, height/size*box.y,\n\t\t\twidth/size, height/size);\n\n\t\tthis.ctx.drawImage(\n\t\t\tnumber.tens,\n\t\t\twidth/size*box.x, height/size*box.y,\n\t\t\twidth/size, height/size);\n\n\t\tif(number.isNegative){\n\t\t\tconst minus = getMinusImage();\n\t\t\tthis.ctx.drawImage(\n\t\t\t\tminus,\n\t\t\t\twidth/size*box.x, height/size*box.y,\n\t\t\t\twidth/size, height/size);\n\t\t}\n\t}\n\n\tdrawCells = (grid: Array<Array<Base>>, size: number) => {\n\t\tconst width = this.canvas.width;\n\t\tconst height = this.canvas.height;\n\n\t\tfor(var x = 0; x < grid.length; x++){\n\t\t\tfor(var y = 0; y < grid.length; y++){\n\t\t\t\tconst conveyor = grid[x][y];\n\n\t\t\t\tconst img = getImage(\n\t\t\t\t\tconveyor.direction,\n\t\t\t\t\tconveyor.type\n\t\t\t\t)\n\n\t\t\t\tthis.ctx.drawImage(\n\t\t\t\t\timg,\n\t\t\t\t\twidth/size*x, height/size*y,\n\t\t\t\t\twidth/size, height/size);\n\t\t\t\t\t// TODO: Modify to draw 0,0 as special cell\n\n\t\t\t\tif(conveyor.memory_type != undefined) {\n\t\t\t\t\tconst border = getBorderImage(conveyor.memory_type);\n\t\t\t\t\tthis.ctx.drawImage(\n\t\t\t\t\t\tborder,\n\t\t\t\t\t\twidth/size*x, height/size*y,\n\t\t\t\t\t\twidth/size, height/size);\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tinitializeCanvas = () => {\n\t\t// TODO: Resize on level change\n\t\tthis.canvas.setAttribute(\"height\", \"384\")\n\t\tthis.canvas.setAttribute(\"width\", \"384\")\n\t\tthis.clearCanvas();\n\t}\n\n\tclearCanvas = () => {\n\t\tthis.ctx.fillStyle = \"#eeeeee\";\n\t\tthis.ctx.fillRect(0,0,this.canvas.width, this.canvas.height)\n\t}\n\n\tsetConveyorButtonBorderColor = (element: HTMLImageElement) => {\n\t\tconst buttons = document.querySelectorAll(\".conveyor_buttons\")\n\t\tbuttons.forEach((button: HTMLImageElement) => {\n\t\t\tbutton.style.borderColor = \"#000000\"\n\t\t});\n\t\telement.style.borderColor = \"#00FF00\";\n\t}\n\n\tinitializeButtons = (direction: Direction) => {\n\t\tthis.updateConveyorButtonImages(direction);\n\n\t\tthis.directionButtons.forEach((element: HTMLImageElement) => {\n\t\t\tlet direction = undefined;\n\t\t\tswitch(element.id){\n\t\t\t\tcase 'up':\n\t\t\t\t\tdirection = Direction.Up;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'down':\n\t\t\t\t\tdirection = Direction.Down;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'left':\n\t\t\t\t\tdirection = Direction.Left;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'right':\n\t\t\t\t\tdirection = Direction.Right;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst imageSource = getImage(direction,Conveyors.Mover).src;\n\t\t\telement.setAttribute('src', imageSource);\n\t\t});\n\n\t\t(document.querySelector(\"#base\") as HTMLImageElement).style.borderColor = \"#00FF00\";\n\n\t\tthis.menuButtons.forEach((element: HTMLImageElement) => {\n\t\t\telement.ondragstart = (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateConveyorButtonImages = (direction: Direction) => {\n\t\tthis.conveyorButtons.forEach((element: HTMLImageElement) => {\n\t\t\tconst imageSource = getImage(direction, stringToConveyor(element.getAttribute('id'))).src;\n\t\t\telement.setAttribute('src', imageSource);\n\t\t});\n\t}\n}","import { StateClass } from './state';\nimport { ViewClass } from './view';\nimport { stringToConveyor, stringToDirection, keyToDirection } from './utils/stringTo'\nimport { MemoryType } from './types';\n\nconst setSize = () => {\n\tconst grid = document.getElementById('grid');\n\tconst width = grid.parentElement.clientWidth;\n\tconst height = grid.parentElement.clientHeight;\n\tconst size = width > height ? height : width;\n\tgrid.style.height = size + \"px\";\n\tgrid.style.width = size*1.5 + \"px\";\n\n\tif(width > height*1.5){\n\t\tgrid.style.height = height + \"px\";\n\t\tgrid.style.width = height*1.5 + \"px\";\n\t}\n\tif(height*1.5 > width) {\n\t\tgrid.style.height = width*2/3 + \"px\";\n\t\tgrid.style.width = width + \"px\";\n\t}\n}\n\nclass Controller {\n\tstate: StateClass;\n\tview: ViewClass;\n\n\tconstructor() {\n\t\tthis.state = new StateClass();\n\t\tthis.view = new ViewClass(this.state.menu.selectedDirection);\n\n\t\tconst canvas: HTMLCanvasElement = document.querySelector(\"#canvas\");\n\t\tcanvas.onclick = this.canvasOnClick;\n\n\t\tconst conveyorButtons: NodeListOf<HTMLImageElement> = document.querySelectorAll(\".conveyor_buttons\");\n\t\tconveyorButtons.forEach((button: HTMLImageElement) => {\n\t\t\tbutton.onclick = this.conveyorButtonOnClick;\n\t\t});\n\n\t\tconst directionButtons: NodeListOf<HTMLImageElement> = document.querySelectorAll(\".direction_buttons\");\n\t\tdirectionButtons.forEach((button: HTMLImageElement) => {\n\t\t\tbutton.onclick = this.directionButtonOnClick;\n\t\t});\n\n\t\tconst memoryButtons: NodeListOf<HTMLButtonElement> = document.querySelectorAll(\".memory_buttons\");\n\t\tmemoryButtons.forEach((button: HTMLButtonElement) => {\n\t\t\tbutton.onclick = this.memoryOnClick;\n\t\t});\n\n\t\t// TEMP remove later\n\t\t(document.querySelector(\"#prev_level\") as HTMLElement).onclick = this.prevLevelOnClick;\n\t\t(document.querySelector(\"#next_level\") as HTMLElement).onclick = this.nextLevelOnClick;\n\t\t(document.querySelector(\"#play_button\") as HTMLElement).onclick = this.gameLoop.start;\n\t\t(document.querySelector(\"#stop_button\") as HTMLElement).onclick = this.gameLoop.stop;\n\t\t(document.querySelector(\"#mover\") as HTMLImageElement).onload = this.gameLoop.draw;\n\t\tthis.view.updateLevelView(this.state.menu.selectedLevel,\n\t\t\tthis.state.level)\n\t\tdocument.onkeydown = this.arrowKeyOnPress;\n\t\t// TEMP\n\n\t}\n\n\tgameLoop = {\n\t\t// Functions and data that relates to the main gameloop\n\t\ttimerId: undefined,\n\t\tisRunning: false,\n\t\tupdate: () => {\n\t\t\t// TODO: Move most of this into state\n\t\t\tif(this.state.box == undefined){\n\t\t\t\tthis.state.box = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\tvalue: this.state.level.input.shift(),\n\t\t\t\t\treturned: false\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst x = this.state.box.x;\n\t\t\t\tconst y = this.state.box.y;\n\n\t\t\t\tthis.state.board.grid[x][y].update(this.state.box);\n\t\t\t}\n\n\t\t\tif(this.state.box.returned){\n\t\t\t\t// TODO: Move into state as function\n\t\t\t\tthis.state.level.actualOutput.push(this.state.box.value);\n\t\t\t\tthis.state.box = undefined;\n\t\t\t}\n\n\t\t\tif(this.gameLoop.failureStateDetector()) {\n\t\t\t\tthis.gameLoop.stop();\n\t\t\t\tconsole.log(\"failed\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(this.state.level.actualOutput.length === this.state.level.expectedOutput.length) {\n\t\t\t\tthis.state.level.completed = true;\n\t\t\t\tthis.gameLoop.stop();\n\t\t\t\t//console.log(\"ya did it\")\n\t\t\t\t// TODO: Add level completion handling\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.gameLoop.draw();\n\t\t},\n\n\t\tdraw: () => {\n\t\t\tthis.view.clearCanvas();\n\t\t\tthis.view.drawCells(this.state.board.grid, this.state.level.size);\n\t\t\tthis.view.drawBox(this.state.box, this.state.level.size);\n\t\t\tthis.view.updateMemoryView(this.state.board.memory)\n\t\t},\n\n\t\tfailureStateDetector: () => {\n\t\t\t// TODO: Move into state\n\t\t\tconst wrongNumber = !this.state.level.actualOutput.every((value, index) => (\n\t\t\t\tvalue === this.state.level.expectedOutput[index]\n\t\t\t));\n\n\t\t\tif(this.state.box === undefined) {\n\t\t\t\treturn wrongNumber;\n\t\t\t}\n\n\t\t\tconst failure = (\n\t\t\t\tthis.state.box.x < 0 ||\n\t\t\t\tthis.state.box.y < 0 ||\n\t\t\t\tthis.state.box.x >= this.state.level.size ||\n\t\t\t\tthis.state.box.y >= this.state.level.size\n\t\t\t)\n\n\t\t\t// TODO: Add displaying reason for failure\n\n\t\t\treturn failure;\n\t\t},\n\n\t\tstart: () => {\n\t\t\tif(this.gameLoop.isRunning) return;\n\t\t\tthis.gameLoop.isRunning = true;\n\t\t\tthis.state.level.input = [...this.state.level.initialInput];\n\t\t\tthis.gameLoop.timerId = setInterval(this.gameLoop.update, 300);\n\t\t},\n\n\t\tstop: () => {\n\t\t\tthis.gameLoop.isRunning = false;\n\t\t\tclearInterval(this.gameLoop.timerId);\n\n\t\t\tthis.state.box = undefined;\n\t\t\tthis.state.board.resetMemory();\n\t\t\tthis.state.level.actualOutput = []\n\n\t\t\tthis.view.updateLevelView(this.state.menu.selectedLevel, this.state.level);\n\t\t\tthis.gameLoop.draw();\n\t\t},\n\t}\n\n\tnextLevelOnClick = () => {\n\t\tif(this.gameLoop.isRunning) { return; }\n\t\tthis.state.levelOperations.nextLevel();\n\t\tthis.view.updateLevelView(this.state.menu.selectedLevel, this.state.level);\n\t\tthis.state.board.resetGrid();\n\t\tthis.gameLoop.draw();\n\t}\n\n\tprevLevelOnClick = () => {\n\t\tif(this.gameLoop.isRunning) { return; }\n\t\tthis.state.levelOperations.prevLevel();\n\t\tthis.view.updateLevelView(this.state.menu.selectedLevel, this.state.level);\n\t\tthis.state.board.resetGrid();\n\t\tthis.gameLoop.draw();\n\t}\n\n\tconveyorButtonOnClick = (e: MouseEvent) => {\n\t\tconst element = (e.target as HTMLImageElement);\n\t\tthis.state.menu.selectedConveyor = stringToConveyor(element.id);\n\t\tthis.view.setConveyorButtonBorderColor(element);\n\t}\n\n\tarrowKeyOnPress = (e: KeyboardEvent) => {\n\t\tconst direction = keyToDirection(e.key);\n\t\tif(direction == undefined){\n\t\t\treturn\n\t\t} else {\n\t\t\tthis.state.menu.selectedDirection = direction;\n\t\t\tthis.view.updateConveyorButtonImages(this.state.menu.selectedDirection);\n\t\t}\n\t}\n\n\tdirectionButtonOnClick = (e: MouseEvent) => {\n\t\tconst element = (e.target as HTMLImageElement);\n\t\tthis.state.menu.selectedDirection = stringToDirection(element.id);\n\t\tthis.view.updateConveyorButtonImages(this.state.menu.selectedDirection);\n\t}\n\n\tmemoryOnClick = (e: MouseEvent) => {\n\t\tconst element = (e.target as HTMLButtonElement);\n\t\tswitch(element.value){\n\t\t\tcase 'a':\n\t\t\t\tthis.state.menu.selectedMemory = MemoryType.A;\n\t\t\t\tbreak;\n\t\t\tcase 'b':\n\t\t\t\tthis.state.menu.selectedMemory = MemoryType.B;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tthis.state.menu.selectedMemory = MemoryType.C;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tcanvasOnClick = (e: MouseEvent) => {\n\t\t\tif(this.gameLoop.isRunning) return;\n\n\t\t\tconst divisor = (e.target as HTMLElement).clientHeight/this.state.level.size;\n\n\t\t\tconst xclick = Math.floor(e.offsetX/divisor);\n\t\t\tconst yclick = Math.floor(e.offsetY/divisor);\n\n\t\t\tif(xclick == 0 && yclick == 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.state.board.updateGrid(xclick, yclick);\n\n\t\t\tthis.gameLoop.draw()\n\t}\n}\n\nwindow.onload = setSize;\nwindow.onresize = setSize;\n\nnew Controller();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}